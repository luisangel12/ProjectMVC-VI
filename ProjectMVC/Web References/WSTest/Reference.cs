//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ProjectMVC.WSTest {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TestSoap", Namespace="http://tempuri.org/")]
    public partial class Test : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback Base64EncodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Base64DecodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActivitiesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Test() {
            this.Url = global::ProjectMVC.Properties.Settings.Default.ProjectMVC_WSTest_Test;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateActivityCompletedEventHandler CreateActivityCompleted;
        
        /// <remarks/>
        public event Base64EncodeCompletedEventHandler Base64EncodeCompleted;
        
        /// <remarks/>
        public event Base64DecodeCompletedEventHandler Base64DecodeCompleted;
        
        /// <remarks/>
        public event GetActivitiesCompletedEventHandler GetActivitiesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateActivity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateActivity(string name) {
            this.Invoke("CreateActivity", new object[] {
                        name});
        }
        
        /// <remarks/>
        public void CreateActivityAsync(string name) {
            this.CreateActivityAsync(name, null);
        }
        
        /// <remarks/>
        public void CreateActivityAsync(string name, object userState) {
            if ((this.CreateActivityOperationCompleted == null)) {
                this.CreateActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateActivityOperationCompleted);
            }
            this.InvokeAsync("CreateActivity", new object[] {
                        name}, this.CreateActivityOperationCompleted, userState);
        }
        
        private void OnCreateActivityOperationCompleted(object arg) {
            if ((this.CreateActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateActivityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Base64Encode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Base64Encode(string plainText) {
            object[] results = this.Invoke("Base64Encode", new object[] {
                        plainText});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Base64EncodeAsync(string plainText) {
            this.Base64EncodeAsync(plainText, null);
        }
        
        /// <remarks/>
        public void Base64EncodeAsync(string plainText, object userState) {
            if ((this.Base64EncodeOperationCompleted == null)) {
                this.Base64EncodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBase64EncodeOperationCompleted);
            }
            this.InvokeAsync("Base64Encode", new object[] {
                        plainText}, this.Base64EncodeOperationCompleted, userState);
        }
        
        private void OnBase64EncodeOperationCompleted(object arg) {
            if ((this.Base64EncodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Base64EncodeCompleted(this, new Base64EncodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Base64Decode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Base64Decode(string base64EndodedData) {
            object[] results = this.Invoke("Base64Decode", new object[] {
                        base64EndodedData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Base64DecodeAsync(string base64EndodedData) {
            this.Base64DecodeAsync(base64EndodedData, null);
        }
        
        /// <remarks/>
        public void Base64DecodeAsync(string base64EndodedData, object userState) {
            if ((this.Base64DecodeOperationCompleted == null)) {
                this.Base64DecodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBase64DecodeOperationCompleted);
            }
            this.InvokeAsync("Base64Decode", new object[] {
                        base64EndodedData}, this.Base64DecodeOperationCompleted, userState);
        }
        
        private void OnBase64DecodeOperationCompleted(object arg) {
            if ((this.Base64DecodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Base64DecodeCompleted(this, new Base64DecodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActivities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Activities[] GetActivities() {
            object[] results = this.Invoke("GetActivities", new object[0]);
            return ((Activities[])(results[0]));
        }
        
        /// <remarks/>
        public void GetActivitiesAsync() {
            this.GetActivitiesAsync(null);
        }
        
        /// <remarks/>
        public void GetActivitiesAsync(object userState) {
            if ((this.GetActivitiesOperationCompleted == null)) {
                this.GetActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActivitiesOperationCompleted);
            }
            this.InvokeAsync("GetActivities", new object[0], this.GetActivitiesOperationCompleted, userState);
        }
        
        private void OnGetActivitiesOperationCompleted(object arg) {
            if ((this.GetActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActivitiesCompleted(this, new GetActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Activities {
        
        private int idField;
        
        private string nameField;
        
        private System.Nullable<bool> activeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateActivityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Base64EncodeCompletedEventHandler(object sender, Base64EncodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Base64EncodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Base64EncodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Base64DecodeCompletedEventHandler(object sender, Base64DecodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Base64DecodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Base64DecodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetActivitiesCompletedEventHandler(object sender, GetActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Activities[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Activities[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591